---
- name: Install dependencies
  become: true
  become_user: root
  apt:
    name:
      - curl
    state: present

- name: Copy resources
  ansible.builtin.copy:
    src: ../resources/
    dest: /var/ansible/resources/

- name: /var/local/k3s dir
  become: true
  become_user: root
  file:
    path: /var/local/k3s
    state: directory
    mode: 0775
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

- name: /var/local/k3s/storage/persistentvolumes dir
  file:
    path: /var/local/k3s/storage/persistentvolumes
    state: directory
    mode: 0775

- name: /var/local/k3s/storage/storageclasses/local-path dir
  file:
    path: /var/local/k3s/storage/storageclasses/local-path
    state: directory
    mode: 0775

- name: Deploy local registry
  when: ansible_local["cluster"]["registry"] == ""
  shell: |
    k3d registry create registry.localhost --port 5000
    while ! curl -s http://k3d-registry.localhost:5000/v2/_catalog; do
      sleep 2
    done

- name: k3d cluster
  when: ansible_local["cluster"]["exists"] != true
  block:
    - name: Deploy k3d cluster
      shell: |
        CLUSTER_NAME="$(hostname -s)-${USER}"
        k3d cluster create \
            ${CLUSTER_NAME} \
            --agents=1 \
            --api-port=$(shuf -i 6000-7000 -n 1) \
            --k3s-arg "--cluster-domain=${CLUSTER_NAME}.local@server:*" \
            --k3s-arg "--kube-proxy-arg=conntrack-max-per-core=0@agent:*" \
            --k3s-arg "--kube-proxy-arg=conntrack-max-per-core=0@server:*" \
            --k3s-arg "--tls-san=$(hostname -i | cut -d" " -f1)@server:*" \
            --k3s-arg "--tls-san=$(hostname -f)@server:*" \
            --kubeconfig-switch-context \
            --kubeconfig-update-default \
            --port=80:80@loadbalancer \
            --port=443:443@loadbalancer \
            --registry-use=k3d-registry.localhost:5000 \
            --servers=1 \
            --timeout=300s \
            --volume /var/local/k3s/storage/persistentvolumes:/mnt/persistentvolumes \
            --volume /var/local/k3s/storage/storageclasses/local-path:/var/lib/rancher/k3s/storage \
            --wait || exit 1

    - name: Edit kube config to reference the node IP
      ansible.builtin.replace:
        path: "$HOME/.kube/config"
        regexp: https://0.0.0.0
        replace: https://{{ ansible_local.host.ip }}

- name: Wait for cluster to be fully up and running
  shell: |
    for deployment in coredns local-path-provisioner metrics-server; do
      kubectl wait --for=condition=Available=true "deployment/$deployment" -n kube-system
    done
    while ! kubectl get deployment traefik -n kube-system 2>/dev/null; do
      sleep 5
    done
    kubectl wait --for=condition=Available=true "deployment/traefik" -n kube-system

- name: Automatic cluster upgrade
  when: ansible_local["cluster"]["deploy"]["system-upgrade-controller"] != suc_version
  block:
    - name: Deploy automatic cluster upgrade
      shell: |
        kubectl apply -f https://github.com/rancher/system-upgrade-controller/releases/download/v{{ suc_version }}/system-upgrade-controller.yaml
    - name: Wait for cluster to be fully up and running
      shell: |
        kubectl wait --for=condition=Available=true "deployment/system-upgrade-controller" -n system-upgrade
